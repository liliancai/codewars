// class Solution {
//     public boolean rotateString(String A, String B) {
//         return A.length() == B.length() && (A + A).contains(B);
//     }
// }
//Runtime: 1 ms, faster than 55.96% of Java online submissions for Rotate String.
// no faster but me original solution
// must use equals() to compare strings!!!! stringa==stringb reuslts 0 if they are equal!!!!
class Solution {
    public boolean rotateString(String A, String B) {
        int la = A.length(), lb = B.length();
                     
        if(la != lb) return false;
        if(la == 0) return true;
        for(int i=0; i<la; i++){
            if(A.substring(i).equals(B.substring(0,la-i))){
                return A.substring(0,i).equals(B.substring(la-i));
            }
        }
        return false;
    }
}

// class Solution {
//     public boolean rotateString(String A, String B)
// 	{
// 		if(A.length()==0 && B.length()==0 ){
//             return true;
//         }
// 		for(int i=1;i<A.length();i++){
//             StringBuilder sb=new StringBuilder();
// 			String first=A.substring(0, i);
// 			String second=A.substring(i);
// 			sb.append(second);
// 			sb.append(first);
// 			if(sb.toString().equals(B)){
// 				return true;
// 			}
// 		}
// 		return false;
// 	}
// }
